kubeadm init --control-plane-endpoint="192.168.56.100:6443" --upload-certs --apiserver-advertise-address=192.168.56.101 --pod-network-cidr=192.168.0.0/16



Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of the control-plane node running the following command on each as root:

  kubeadm join 192.168.56.100:6443 --token 57cawz.0u4vhxshluu7bp4v \
    --discovery-token-ca-cert-hash sha256:88fa47ece01e3bccad093dffd1a3b96ed612f78cd6f72e17be5631f55dfc0019 \
    --control-plane --certificate-key 32d3398ef3910d7a847969101ddc93021cc6838971c7f4ace8680f81cc7bb192

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 192.168.56.100:6443 --token 57cawz.0u4vhxshluu7bp4v \
    --discovery-token-ca-cert-hash sha256:88fa47ece01e3bccad093dffd1a3b96ed612f78cd6f72e17be5631f55dfc0019 

====================================================================================================





Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of the control-plane node running the following command on each as root:

  kubeadm join 192.168.56.100:6443 --token 739xap.s4w162py9ejc8blj \
    --discovery-token-ca-cert-hash sha256:750154c2d01004b16175d69812274e500da9b60484ab1410404c9f76cd5299d6 \
    --control-plane --certificate-key 71f1444f7aa01e85e0ce81a27ca8679248e71f257ab45dd4add727a1baa12170

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 192.168.56.100:6443 --token 739xap.s4w162py9ejc8blj \
    --discovery-token-ca-cert-hash sha256:750154c2d01004b16175d69812274e500da9b60484ab1410404c9f76cd5299d6 
root@kmaster1:~# 


_____________________________________________________________________________________________________________________
_____________________________________________________________________________________________________________________
Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of the control-plane node running the following command on each as root:

  kubeadm join 192.168.56.100:6443 --token a9phku.ppizelsc8rn2f4hn \
    --discovery-token-ca-cert-hash sha256:89df6eb1ff15254b6508d2ccbe59883590cd2a54a7c4c86c6b6e492cde48672d \
    --control-plane --certificate-key 84c3065900e95112d4b614ca8a13af3644138fb22b76adf5efe9589082692100

Please note that the certificate-key gives access to cluster sensitive data, keep it secret!
As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use
"kubeadm init phase upload-certs --upload-certs" to reload certs afterward.

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 192.168.56.100:6443 --token a9phku.ppizelsc8rn2f4hn \
    --discovery-token-ca-cert-hash sha256:89df6eb1ff15254b6508d2ccbe59883590cd2a54a7c4c86c6b6e492cde48672d 
root@kmaster1:~# 


